<main class="container py-5">
    <h1>Meme-o-Gram</h1>
    <p class="lead">Rate your memes</p>



    <hr class="my-5">

    <div class="row justify-content-center">
        <div class="card col-md-4">
            <div class="card-body">
                <form action=" /uploadmultiple" enctype="multipart/form-data" method="POST">
                    <div class="mb-3">
                        <label for="images" class="form-label">Upload Meme</label>
                        <input class="form-control" type="file" name="images" id="images" multiple required>
                    </div>
                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" name="username" id="username" required class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="caption" class="form-label">Caption</label>
                        <textarea class="form-control" id="caption" name="caption" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-outline-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>

        
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
           Sort By
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" href="/orderbyupvotes">Upvotes (high - low)</a>
            <a class="dropdown-item" href="/orderbydownvotes">Downvotes (low - high)</a>
            <a class="dropdown-item" href="/">Posted On (latest Arrival)</a>
        </div>
    </div>
   

  
    <hr class="my-5">
    <div class="row" data-masonry='{"percentPosition": true }'>
        {{#each images}}
        {{#each this}}
        {{#if imageBase64 }}
        <div class="col-sm-6 col-lg-4 mb-4">
            <div class="card">
                <img src='data:{{contentType}};base64,{{imageBase64}}' alt="..." style="width: 100%; height: 200">


                <div class="card-body">
                    <h5 class="card-title">{{ this.username }}</h5>
                    <p class="card-text">{{ this.caption }}
                    </p>
                    <p class="card-text"><small class="text-muted">posted on {{ this.postedon }}</small></p>
                    <button type="button" onclick="actOnPost(event);" data-post-id="{{ this._id }}"
                        class="btn btn-outline-primary btn-sm"><i class="fa fa-thumbs-o-up"></i>
                        Upvote </button>
                    <span id="Upvote-count-{{ this._id }}" class="badge bg-primary">{{ this.upvotes
                        }}</span>
                    <button type="button" onclick="actOnPost(event);" data-post-id="{{ this._id }}"
                        class="btn btn-outline-danger btn-sm">
                        <i class="fa fa-thumbs-o-down"></i>
                        Downvote
                    </button>
                    <span id="Downvote-count-{{ this._id }}" class="badge bg-danger">{{ this.downvotes
                        }}</span>
                </div>
            </div>
        </div>
        {{/if}}
        {{/each}}
        {{/each}}

    </div>

</main>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
   
    var updatePostStats = {
        Upvote: function (postId) {
            document.querySelector('#Upvote-count-' + postId).textContent++;
        },
        Downvote: function (postId) {
            let spanId = "Downvote-count-" + postId;
            document.querySelector('#Downvote-count-' + postId).textContent++;
        }
    };

    var toggleButtonText = {
        Upvote: function (button) {
            button.textContent = "Upvote";
        },
        Downvote: function (button) {
            button.textContent = "Downvote";
        }
    };

    var actOnPost = function (event) {
        var postId = event.target.dataset.postId;
        var action = event.target.textContent.replace(/[0-9]/g, '').trim();
        console.log(action);
        //console.log(event.target);
        toggleButtonText[action](event.target);
        //updatePostStats[action](postId);
        axios.post('posts/' + postId + '/act', { action: action, socketId: socketId });
    };
</script>
<script src="https://js.pusher.com/4.1/pusher.min.js"></script>
<script>
     var pusher = new Pusher('26dd07dc156acae4c8b3', {
            cluster: 'ap2'
        });
        var socketId;
    
        // retrieve the socket ID on successful connection
        pusher.connection.bind('connected', function() {
            socketId = pusher.connection.socket_id;
        });
    
    
        var channel = pusher.subscribe('post-events');
        channel.bind('postAction', function(data) {
            // log message data to console - for debugging purposes
            //so the problem lies in fetching the postId of the data 
            console.log(data);
            var action = data.action;
            updatePostStats[action](data.postId);
        });
</script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
